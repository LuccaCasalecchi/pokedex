{"remainingRequest":"C:\\Users\\win\\Desktop\\pokedex-dio\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\win\\Desktop\\pokedex-dio\\src\\store\\actions.js","dependencies":[{"path":"C:\\Users\\win\\Desktop\\pokedex-dio\\src\\store\\actions.js","mtime":1602971703000},{"path":"C:\\Users\\win\\Desktop\\pokedex-dio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617048858184},{"path":"C:\\Users\\win\\Desktop\\pokedex-dio\\node_modules\\babel-loader\\lib\\index.js","mtime":1604379484542}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL3dpbi9EZXNrdG9wL3Bva2VkZXgtZGlvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IFBva2VBUEkgZnJvbSAnQC9zZXJ2aWNlcy9wb2tlYXBpJzsKaW1wb3J0IHN0YXRlIGZyb20gJy4vc3RhdGUnOwppbXBvcnQgbXV0YXRpb25zIGZyb20gJy4vbXV0YXRpb25zJzsKZXhwb3J0IGRlZmF1bHQgewogIGdldFBva2Vtb25zOiBmdW5jdGlvbiBnZXRQb2tlbW9ucygpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBzZXRMaXN0LCBzZXRJc1Bva2Vtb25TZWFyY2gsIHNldExpc3RIYXNFcnJvciwgc2V0TGlzdEhhc05leHQsIHNldExpc3RIYXNDb21wbGV0ZWQsIHVwZGF0ZU9mZnNldCwgX3Bva2Vtb25zTGlzdCRyZXN1bHRzLCBwb2tlbW9uc0xpc3QsIHByZXBhcmVJbmZvLCBwb2tlbW9uc0luZm87CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgc2V0TGlzdCA9IG11dGF0aW9ucy5zZXRMaXN0LCBzZXRJc1Bva2Vtb25TZWFyY2ggPSBtdXRhdGlvbnMuc2V0SXNQb2tlbW9uU2VhcmNoLCBzZXRMaXN0SGFzRXJyb3IgPSBtdXRhdGlvbnMuc2V0TGlzdEhhc0Vycm9yLCBzZXRMaXN0SGFzTmV4dCA9IG11dGF0aW9ucy5zZXRMaXN0SGFzTmV4dCwgc2V0TGlzdEhhc0NvbXBsZXRlZCA9IG11dGF0aW9ucy5zZXRMaXN0SGFzQ29tcGxldGVkLCB1cGRhdGVPZmZzZXQgPSBtdXRhdGlvbnMudXBkYXRlT2Zmc2V0OwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgIHNldElzUG9rZW1vblNlYXJjaChmYWxzZSk7CiAgICAgICAgICAgICAgc2V0TGlzdEhhc0Vycm9yKGZhbHNlKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gUG9rZUFQSS5nZXRQb2tlbW9ucyh7CiAgICAgICAgICAgICAgICBsaW1pdDogc3RhdGUubGltaXQsCiAgICAgICAgICAgICAgICBvZmZzZXQ6IHN0YXRlLm9mZnNldAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHBva2Vtb25zTGlzdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghKHBva2Vtb25zTGlzdCA9PT0gbnVsbCB8fCBwb2tlbW9uc0xpc3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfcG9rZW1vbnNMaXN0JHJlc3VsdHMgPSBwb2tlbW9uc0xpc3QucmVzdWx0cykgPT09IG51bGwgfHwgX3Bva2Vtb25zTGlzdCRyZXN1bHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcG9rZW1vbnNMaXN0JHJlc3VsdHMubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBwcmVwYXJlSW5mbyA9IHBva2Vtb25zTGlzdC5yZXN1bHRzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgcmV0dXJuIFBva2VBUEkuZ2V0UG9rZW1vbkJ5TmFtZShpdGVtLm5hbWUpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJlcGFyZUluZm8pOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBwb2tlbW9uc0luZm8gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHNldExpc3QocG9rZW1vbnNJbmZvKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgaWYgKHBva2Vtb25zTGlzdCA9PT0gbnVsbCB8fCBwb2tlbW9uc0xpc3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBva2Vtb25zTGlzdC5uZXh0KSB7CiAgICAgICAgICAgICAgICBzZXRMaXN0SGFzTmV4dCh0cnVlKTsKICAgICAgICAgICAgICAgIHVwZGF0ZU9mZnNldCgpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBzZXRMaXN0SGFzTmV4dChmYWxzZSk7CiAgICAgICAgICAgICAgICBzZXRMaXN0SGFzQ29tcGxldGVkKHRydWUpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTY7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICBzZXRMaXN0SGFzRXJyb3IodHJ1ZSk7CgogICAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDE2XV0pOwogICAgfSkpKCk7CiAgfSwKICBnZXRQb2tlbW9uQnlOYW1lOiBmdW5jdGlvbiBnZXRQb2tlbW9uQnlOYW1lKG5hbWUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgc2V0UG9rZW1vblNlYXJjaGVkLCBwb2tlbW9uOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHNldFBva2Vtb25TZWFyY2hlZCA9IG11dGF0aW9ucy5zZXRQb2tlbW9uU2VhcmNoZWQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBQb2tlQVBJLmdldFBva2Vtb25CeU5hbWUobmFtZSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcG9rZW1vbiA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAocG9rZW1vbikgewogICAgICAgICAgICAgICAgc2V0UG9rZW1vblNlYXJjaGVkKHBva2Vtb24pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgc2VhcmNoUG9rZW1vbjogZnVuY3Rpb24gc2VhcmNoUG9rZW1vbihuYW1lKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgc2V0SXNQb2tlbW9uU2VhcmNoLCBzZXRJc1NlYXJjaGluZywgc2V0UG9rZW1vblNlYXJjaGVkLCBzZXRTZWFyY2hIYXNFcnJvciwgcmVzZXRMaXN0LCBwb2tlbW9uOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHNldElzUG9rZW1vblNlYXJjaCA9IG11dGF0aW9ucy5zZXRJc1Bva2Vtb25TZWFyY2gsIHNldElzU2VhcmNoaW5nID0gbXV0YXRpb25zLnNldElzU2VhcmNoaW5nLCBzZXRQb2tlbW9uU2VhcmNoZWQgPSBtdXRhdGlvbnMuc2V0UG9rZW1vblNlYXJjaGVkLCBzZXRTZWFyY2hIYXNFcnJvciA9IG11dGF0aW9ucy5zZXRTZWFyY2hIYXNFcnJvciwgcmVzZXRMaXN0ID0gbXV0YXRpb25zLnJlc2V0TGlzdDsKCiAgICAgICAgICAgICAgaWYgKG5hbWUpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmVzZXRMaXN0KCk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNDsKICAgICAgICAgICAgICBzZXRTZWFyY2hIYXNFcnJvcihmYWxzZSk7CiAgICAgICAgICAgICAgc2V0SXNTZWFyY2hpbmcodHJ1ZSk7CiAgICAgICAgICAgICAgc2V0SXNQb2tlbW9uU2VhcmNoKHRydWUpOwogICAgICAgICAgICAgIHBva2Vtb24gPSBzdGF0ZS50bXBMaXN0LmZpbmQoZnVuY3Rpb24gKGluZm8pIHsKICAgICAgICAgICAgICAgIHJldHVybiBpbmZvLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBpZiAoIXBva2Vtb24pIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHNldFBva2Vtb25TZWFyY2hlZChwb2tlbW9uKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmdldFBva2Vtb25CeU5hbWUobmFtZSk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTY7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDQpOwogICAgICAgICAgICAgIHNldFNlYXJjaEhhc0Vycm9yKHRydWUpOwoKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE5OwogICAgICAgICAgICAgIHNldElzU2VhcmNoaW5nKGZhbHNlKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmZpbmlzaCgxOSk7CgogICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbNCwgMTYsIDE5LCAyMl1dKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["C:/Users/win/Desktop/pokedex-dio/src/store/actions.js"],"names":["PokeAPI","state","mutations","getPokemons","setList","setIsPokemonSearch","setListHasError","setListHasNext","setListHasCompleted","updateOffset","limit","offset","pokemonsList","results","length","prepareInfo","map","item","getPokemonByName","name","Promise","all","pokemonsInfo","next","setPokemonSearched","pokemon","searchPokemon","setIsSearching","setSearchHasError","resetList","tmpList","find","info","toLowerCase"],"mappings":"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","sourcesContent":["import PokeAPI from '@/services/pokeapi';\n\nimport state from './state';\nimport mutations from './mutations';\n\nexport default {\n\tasync getPokemons() {\n\t\tconst {\n\t\t\tsetList,\n\t\t\tsetIsPokemonSearch,\n\t\t\tsetListHasError,\n\t\t\tsetListHasNext,\n\t\t\tsetListHasCompleted,\n\t\t\tupdateOffset,\n\t\t} = mutations;\n\n\t\ttry {\n\t\t\tsetIsPokemonSearch(false);\n\t\t\tsetListHasError(false);\n\n\t\t\tconst pokemonsList = await PokeAPI.getPokemons({ limit: state.limit, offset: state.offset });\n\n\t\t\tif (pokemonsList?.results?.length) {\n\t\t\t\tconst prepareInfo = pokemonsList.results.map(item => PokeAPI.getPokemonByName(item.name));\n\t\t\t\tconst pokemonsInfo = await Promise.all(prepareInfo);\n\n\t\t\t\tsetList(pokemonsInfo);\n\t\t\t}\n\n\t\t\tif (pokemonsList?.next) {\n\t\t\t\tsetListHasNext(true);\n\t\t\t\tupdateOffset();\n\t\t\t} else {\n\t\t\t\tsetListHasNext(false);\n\t\t\t\tsetListHasCompleted(true);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetListHasError(true);\n\t\t}\n\t},\n\tasync getPokemonByName(name) {\n\t\tconst { setPokemonSearched } = mutations;\n\n\t\tconst pokemon = await PokeAPI.getPokemonByName(name);\n\n\t\tif (pokemon) {\n\t\t\tsetPokemonSearched(pokemon);\n\t\t}\n\t},\n\tasync searchPokemon(name) {\n\t\tconst {\n\t\t\tsetIsPokemonSearch,\n\t\t\tsetIsSearching,\n\t\t\tsetPokemonSearched,\n\t\t\tsetSearchHasError,\n\t\t\tresetList,\n\t\t} = mutations;\n\n\t\tif (!name) {\n\t\t\tresetList();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetSearchHasError(false);\n\t\t\tsetIsSearching(true);\n\t\t\tsetIsPokemonSearch(true);\n\n\t\t\tconst pokemon = state.tmpList.find(info => info.name.toLowerCase() === name.toLowerCase());\n\n\t\t\tif (pokemon) {\n\t\t\t\tsetPokemonSearched(pokemon);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.getPokemonByName(name);\n\t\t} catch (error) {\n\t\t\tsetSearchHasError(true);\n\t\t} finally {\n\t\t\tsetIsSearching(false);\n\t\t}\n\t},\n};\n"]}]}